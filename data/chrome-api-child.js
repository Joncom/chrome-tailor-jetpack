/**
 * THIS FILE GENERATED BY ./scripts/build-chrome-api-child.js
 * DO NOT EDIT MANUALLY.
 */

var chrome = createObjectIn(unsafeWindow, { defineAs: "chrome" });
var INC_ID = 0;
var alarms = createObjectIn(chrome, { defineAs: "alarms" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"alarms","method":"create"}),alarms,{ defineAs:"create"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"alarms","method":"get","success":1}),alarms,{ defineAs:"get"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"alarms","method":"getAll","success":0}),alarms,{ defineAs:"getAll"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"alarms","method":"clear","success":1}),alarms,{ defineAs:"clear"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"alarms","method":"clearAll","success":0}),alarms,{ defineAs:"clearAll"});
var bookmarks = createObjectIn(chrome, { defineAs: "bookmarks" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"get","success":1}),bookmarks,{ defineAs:"get"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"getChildren","success":1}),bookmarks,{ defineAs:"getChildren"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"getRecent","success":1}),bookmarks,{ defineAs:"getRecent"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"getTree","success":0}),bookmarks,{ defineAs:"getTree"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"getSubTree","success":1}),bookmarks,{ defineAs:"getSubTree"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"search","success":1}),bookmarks,{ defineAs:"search"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"create","success":1}),bookmarks,{ defineAs:"create"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"move","success":2}),bookmarks,{ defineAs:"move"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"update","success":2}),bookmarks,{ defineAs:"update"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"remove","success":1}),bookmarks,{ defineAs:"remove"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"removeTree","success":1}),bookmarks,{ defineAs:"removeTree"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"import","success":0}),bookmarks,{ defineAs:"import"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"bookmarks","method":"export","success":0}),bookmarks,{ defineAs:"export"});
var browserAction = createObjectIn(chrome, { defineAs: "browserAction" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"setTitle"}),browserAction,{ defineAs:"setTitle"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"getTitle","success":1}),browserAction,{ defineAs:"getTitle"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"setIcon","success":1}),browserAction,{ defineAs:"setIcon"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"setPopup"}),browserAction,{ defineAs:"setPopup"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"getPopup","success":1}),browserAction,{ defineAs:"getPopup"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"setBadgeText"}),browserAction,{ defineAs:"setBadgeText"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"getBadgeText","success":1}),browserAction,{ defineAs:"getBadgeText"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"setBadgeBackgroundColor"}),browserAction,{ defineAs:"setBadgeBackgroundColor"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"getBadgeBackgroundColor","success":1}),browserAction,{ defineAs:"getBadgeBackgroundColor"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"enable"}),browserAction,{ defineAs:"enable"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"disable"}),browserAction,{ defineAs:"disable"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browserAction","method":"openPopup","success":0}),browserAction,{ defineAs:"openPopup"});
var browsingData = createObjectIn(chrome, { defineAs: "browsingData" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"settings","success":0}),browsingData,{ defineAs:"settings"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"remove","success":2}),browsingData,{ defineAs:"remove"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeAppcache","success":1}),browsingData,{ defineAs:"removeAppcache"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeCache","success":1}),browsingData,{ defineAs:"removeCache"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeCookies","success":1}),browsingData,{ defineAs:"removeCookies"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeDownloads","success":1}),browsingData,{ defineAs:"removeDownloads"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeFileSystems","success":1}),browsingData,{ defineAs:"removeFileSystems"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeFormData","success":1}),browsingData,{ defineAs:"removeFormData"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeHistory","success":1}),browsingData,{ defineAs:"removeHistory"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeIndexedDB","success":1}),browsingData,{ defineAs:"removeIndexedDB"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeLocalStorage","success":1}),browsingData,{ defineAs:"removeLocalStorage"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removePluginData","success":1}),browsingData,{ defineAs:"removePluginData"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removePasswords","success":1}),browsingData,{ defineAs:"removePasswords"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"browsingData","method":"removeWebSQL","success":1}),browsingData,{ defineAs:"removeWebSQL"});
var commands = createObjectIn(chrome, { defineAs: "commands" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"commands","method":"getAll","success":0}),commands,{ defineAs:"getAll"});
var contentSettings = createObjectIn(chrome, { defineAs: "contentSettings" });
var contextMenus = createObjectIn(chrome, { defineAs: "contextMenus" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"contextMenus","method":"create","success":1}),contextMenus,{ defineAs:"create"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"contextMenus","method":"update","success":2}),contextMenus,{ defineAs:"update"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"contextMenus","method":"remove","success":1}),contextMenus,{ defineAs:"remove"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"contextMenus","method":"removeAll","success":0}),contextMenus,{ defineAs:"removeAll"});
var cookies = createObjectIn(chrome, { defineAs: "cookies" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"cookies","method":"get","success":1}),cookies,{ defineAs:"get"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"cookies","method":"getAll","success":1}),cookies,{ defineAs:"getAll"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"cookies","method":"set","success":1}),cookies,{ defineAs:"set"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"cookies","method":"remove","success":1}),cookies,{ defineAs:"remove"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"cookies","method":"getAllCookieStores","success":0}),cookies,{ defineAs:"getAllCookieStores"});
var _debugger = createObjectIn(chrome, { defineAs: "debugger" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"debugger","method":"attach","success":2}),_debugger,{ defineAs:"attach"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"debugger","method":"detach","success":1}),_debugger,{ defineAs:"detach"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"debugger","method":"sendCommand","success":3}),_debugger,{ defineAs:"sendCommand"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"debugger","method":"getTargets","success":0}),_debugger,{ defineAs:"getTargets"});
var declarativeContent = createObjectIn(chrome, { defineAs: "declarativeContent" });
var desktopCapture = createObjectIn(chrome, { defineAs: "desktopCapture" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"desktopCapture","method":"chooseDesktopMedia","success":2}),desktopCapture,{ defineAs:"chooseDesktopMedia"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"desktopCapture","method":"cancelChooseDesktopMedia"}),desktopCapture,{ defineAs:"cancelChooseDesktopMedia"});
var devtools = createObjectIn(chrome, { defineAs: "devtools" });
var devtoolsinspectedWindow = createObjectIn(devtools, { defineAs: "inspectedWindow" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"devtools.inspectedWindow","method":"eval","success":2}),devtoolsinspectedWindow,{ defineAs:"eval"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"devtools.inspectedWindow","method":"reload"}),devtoolsinspectedWindow,{ defineAs:"reload"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"devtools.inspectedWindow","method":"getResources","success":0}),devtoolsinspectedWindow,{ defineAs:"getResources"});
var devtools = createObjectIn(chrome, { defineAs: "devtools" });
var devtoolsnetwork = createObjectIn(devtools, { defineAs: "network" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"devtools.network","method":"getHAR","success":0}),devtoolsnetwork,{ defineAs:"getHAR"});
var devtools = createObjectIn(chrome, { defineAs: "devtools" });
var devtoolspanels = createObjectIn(devtools, { defineAs: "panels" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"devtools.panels","method":"create","success":3}),devtoolspanels,{ defineAs:"create"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"devtools.panels","method":"setOpenResourceHandler","success":0}),devtoolspanels,{ defineAs:"setOpenResourceHandler"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"devtools.panels","method":"openResource","success":2}),devtoolspanels,{ defineAs:"openResource"});
var downloads = createObjectIn(chrome, { defineAs: "downloads" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"download","success":1}),downloads,{ defineAs:"download"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"search","success":1}),downloads,{ defineAs:"search"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"pause","success":1}),downloads,{ defineAs:"pause"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"resume","success":1}),downloads,{ defineAs:"resume"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"cancel","success":1}),downloads,{ defineAs:"cancel"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"getFileIcon","success":2}),downloads,{ defineAs:"getFileIcon"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"open"}),downloads,{ defineAs:"open"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"show"}),downloads,{ defineAs:"show"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"showDefaultFolder"}),downloads,{ defineAs:"showDefaultFolder"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"erase","success":1}),downloads,{ defineAs:"erase"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"removeFile","success":1}),downloads,{ defineAs:"removeFile"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"acceptDanger","success":1}),downloads,{ defineAs:"acceptDanger"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"drag"}),downloads,{ defineAs:"drag"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"downloads","method":"setShelfEnabled"}),downloads,{ defineAs:"setShelfEnabled"});
var events = createObjectIn(chrome, { defineAs: "events" });
var extension = createObjectIn(chrome, { defineAs: "extension" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"extension","method":"sendRequest"}),extension,{ defineAs:"sendRequest"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"extension","method":"getURL"}),extension,{ defineAs:"getURL"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"extension","method":"getViews"}),extension,{ defineAs:"getViews"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"extension","method":"getBackgroundPage"}),extension,{ defineAs:"getBackgroundPage"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"extension","method":"getExtensionTabs"}),extension,{ defineAs:"getExtensionTabs"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"extension","method":"isAllowedIncognitoAccess","success":0}),extension,{ defineAs:"isAllowedIncognitoAccess"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"extension","method":"isAllowedFileSchemeAccess","success":0}),extension,{ defineAs:"isAllowedFileSchemeAccess"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"extension","method":"setUpdateUrlData"}),extension,{ defineAs:"setUpdateUrlData"});
var extensionTypes = createObjectIn(chrome, { defineAs: "extensionTypes" });
var fontSettings = createObjectIn(chrome, { defineAs: "fontSettings" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"clearFont","success":1}),fontSettings,{ defineAs:"clearFont"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"getFont","success":1}),fontSettings,{ defineAs:"getFont"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"setFont","success":1}),fontSettings,{ defineAs:"setFont"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"getFontList","success":0}),fontSettings,{ defineAs:"getFontList"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"clearDefaultFontSize","success":1}),fontSettings,{ defineAs:"clearDefaultFontSize"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"getDefaultFontSize","success":1}),fontSettings,{ defineAs:"getDefaultFontSize"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"setDefaultFontSize","success":1}),fontSettings,{ defineAs:"setDefaultFontSize"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"clearDefaultFixedFontSize","success":1}),fontSettings,{ defineAs:"clearDefaultFixedFontSize"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"getDefaultFixedFontSize","success":1}),fontSettings,{ defineAs:"getDefaultFixedFontSize"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"setDefaultFixedFontSize","success":1}),fontSettings,{ defineAs:"setDefaultFixedFontSize"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"clearMinimumFontSize","success":1}),fontSettings,{ defineAs:"clearMinimumFontSize"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"getMinimumFontSize","success":1}),fontSettings,{ defineAs:"getMinimumFontSize"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"fontSettings","method":"setMinimumFontSize","success":1}),fontSettings,{ defineAs:"setMinimumFontSize"});
var gcm = createObjectIn(chrome, { defineAs: "gcm" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"gcm","method":"register","success":1}),gcm,{ defineAs:"register"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"gcm","method":"unregister","success":0}),gcm,{ defineAs:"unregister"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"gcm","method":"send","success":1}),gcm,{ defineAs:"send"});
var history = createObjectIn(chrome, { defineAs: "history" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"history","method":"search","success":1}),history,{ defineAs:"search"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"history","method":"getVisits","success":1}),history,{ defineAs:"getVisits"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"history","method":"addUrl","success":1}),history,{ defineAs:"addUrl"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"history","method":"deleteUrl","success":1}),history,{ defineAs:"deleteUrl"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"history","method":"deleteRange","success":1}),history,{ defineAs:"deleteRange"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"history","method":"deleteAll","success":0}),history,{ defineAs:"deleteAll"});
var i18n = createObjectIn(chrome, { defineAs: "i18n" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"i18n","method":"getAcceptLanguages","success":0}),i18n,{ defineAs:"getAcceptLanguages"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"i18n","method":"getMessage"}),i18n,{ defineAs:"getMessage"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"i18n","method":"getUILanguage"}),i18n,{ defineAs:"getUILanguage"});
var identity = createObjectIn(chrome, { defineAs: "identity" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"identity","method":"getAccounts","success":0}),identity,{ defineAs:"getAccounts"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"identity","method":"getAuthToken","success":1}),identity,{ defineAs:"getAuthToken"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"identity","method":"getProfileUserInfo","success":0}),identity,{ defineAs:"getProfileUserInfo"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"identity","method":"removeCachedAuthToken","success":1}),identity,{ defineAs:"removeCachedAuthToken"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"identity","method":"launchWebAuthFlow","success":1}),identity,{ defineAs:"launchWebAuthFlow"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"identity","method":"getRedirectURL"}),identity,{ defineAs:"getRedirectURL"});
var idle = createObjectIn(chrome, { defineAs: "idle" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"idle","method":"queryState","success":1}),idle,{ defineAs:"queryState"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"idle","method":"setDetectionInterval"}),idle,{ defineAs:"setDetectionInterval"});
var management = createObjectIn(chrome, { defineAs: "management" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"getAll","success":0}),management,{ defineAs:"getAll"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"get","success":1}),management,{ defineAs:"get"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"getSelf","success":0}),management,{ defineAs:"getSelf"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"getPermissionWarningsById","success":1}),management,{ defineAs:"getPermissionWarningsById"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"getPermissionWarningsByManifest","success":1}),management,{ defineAs:"getPermissionWarningsByManifest"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"setEnabled","success":2}),management,{ defineAs:"setEnabled"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"uninstall","success":2}),management,{ defineAs:"uninstall"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"uninstallSelf","success":1}),management,{ defineAs:"uninstallSelf"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"launchApp","success":1}),management,{ defineAs:"launchApp"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"createAppShortcut","success":1}),management,{ defineAs:"createAppShortcut"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"setLaunchType","success":2}),management,{ defineAs:"setLaunchType"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"management","method":"generateAppForLink","success":2}),management,{ defineAs:"generateAppForLink"});
var notifications = createObjectIn(chrome, { defineAs: "notifications" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"notifications","method":"create","success":2}),notifications,{ defineAs:"create"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"notifications","method":"update","success":2}),notifications,{ defineAs:"update"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"notifications","method":"clear","success":1}),notifications,{ defineAs:"clear"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"notifications","method":"getAll","success":0}),notifications,{ defineAs:"getAll"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"notifications","method":"getPermissionLevel","success":0}),notifications,{ defineAs:"getPermissionLevel"});
var omnibox = createObjectIn(chrome, { defineAs: "omnibox" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"omnibox","method":"sendSuggestions"}),omnibox,{ defineAs:"sendSuggestions"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"omnibox","method":"setDefaultSuggestion"}),omnibox,{ defineAs:"setDefaultSuggestion"});
var pageAction = createObjectIn(chrome, { defineAs: "pageAction" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"pageAction","method":"show"}),pageAction,{ defineAs:"show"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"pageAction","method":"hide"}),pageAction,{ defineAs:"hide"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"pageAction","method":"setTitle"}),pageAction,{ defineAs:"setTitle"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"pageAction","method":"getTitle","success":1}),pageAction,{ defineAs:"getTitle"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"pageAction","method":"setIcon","success":1}),pageAction,{ defineAs:"setIcon"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"pageAction","method":"setPopup"}),pageAction,{ defineAs:"setPopup"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"pageAction","method":"getPopup","success":1}),pageAction,{ defineAs:"getPopup"});
var pageCapture = createObjectIn(chrome, { defineAs: "pageCapture" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"pageCapture","method":"saveAsMHTML","success":1}),pageCapture,{ defineAs:"saveAsMHTML"});
var permissions = createObjectIn(chrome, { defineAs: "permissions" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"permissions","method":"getAll","success":0}),permissions,{ defineAs:"getAll"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"permissions","method":"contains","success":1}),permissions,{ defineAs:"contains"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"permissions","method":"request","success":1}),permissions,{ defineAs:"request"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"permissions","method":"remove","success":1}),permissions,{ defineAs:"remove"});
var power = createObjectIn(chrome, { defineAs: "power" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"power","method":"requestKeepAwake"}),power,{ defineAs:"requestKeepAwake"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"power","method":"releaseKeepAwake"}),power,{ defineAs:"releaseKeepAwake"});
var privacy = createObjectIn(chrome, { defineAs: "privacy" });
var proxy = createObjectIn(chrome, { defineAs: "proxy" });
var runtime = createObjectIn(chrome, { defineAs: "runtime" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"getBackgroundPage","success":0}),runtime,{ defineAs:"getBackgroundPage"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"openOptionsPage","success":0}),runtime,{ defineAs:"openOptionsPage"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"getManifest"}),runtime,{ defineAs:"getManifest"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"getURL"}),runtime,{ defineAs:"getURL"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"setUninstallURL"}),runtime,{ defineAs:"setUninstallURL"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"reload"}),runtime,{ defineAs:"reload"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"requestUpdateCheck","success":0}),runtime,{ defineAs:"requestUpdateCheck"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"restart"}),runtime,{ defineAs:"restart"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"connect"}),runtime,{ defineAs:"connect"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"connectNative"}),runtime,{ defineAs:"connectNative"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"sendMessage"}),runtime,{ defineAs:"sendMessage"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"sendNativeMessage"}),runtime,{ defineAs:"sendNativeMessage"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"getPlatformInfo","success":0}),runtime,{ defineAs:"getPlatformInfo"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"runtime","method":"getPackageDirectoryEntry","success":0}),runtime,{ defineAs:"getPackageDirectoryEntry"});
var sessions = createObjectIn(chrome, { defineAs: "sessions" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"sessions","method":"getRecentlyClosed","success":1}),sessions,{ defineAs:"getRecentlyClosed"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"sessions","method":"getDevices","success":1}),sessions,{ defineAs:"getDevices"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"sessions","method":"restore","success":1}),sessions,{ defineAs:"restore"});
var storage = createObjectIn(chrome, { defineAs: "storage" });
var system = createObjectIn(chrome, { defineAs: "system" });
var systemcpu = createObjectIn(system, { defineAs: "cpu" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"system.cpu","method":"getInfo","success":0}),systemcpu,{ defineAs:"getInfo"});
var system = createObjectIn(chrome, { defineAs: "system" });
var systemmemory = createObjectIn(system, { defineAs: "memory" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"system.memory","method":"getInfo","success":0}),systemmemory,{ defineAs:"getInfo"});
var system = createObjectIn(chrome, { defineAs: "system" });
var systemstorage = createObjectIn(system, { defineAs: "storage" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"system.storage","method":"getInfo","success":0}),systemstorage,{ defineAs:"getInfo"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"system.storage","method":"ejectDevice","success":1}),systemstorage,{ defineAs:"ejectDevice"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"system.storage","method":"getAvailableCapacity","success":1}),systemstorage,{ defineAs:"getAvailableCapacity"});
var tabCapture = createObjectIn(chrome, { defineAs: "tabCapture" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabCapture","method":"capture","success":1}),tabCapture,{ defineAs:"capture"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabCapture","method":"getCapturedTabs","success":0}),tabCapture,{ defineAs:"getCapturedTabs"});
var tabs = createObjectIn(chrome, { defineAs: "tabs" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"get","success":1}),tabs,{ defineAs:"get"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"getCurrent","success":0}),tabs,{ defineAs:"getCurrent"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"connect"}),tabs,{ defineAs:"connect"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"sendRequest"}),tabs,{ defineAs:"sendRequest"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"sendMessage"}),tabs,{ defineAs:"sendMessage"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"getSelected","success":1}),tabs,{ defineAs:"getSelected"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"getAllInWindow","success":1}),tabs,{ defineAs:"getAllInWindow"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"create","success":1}),tabs,{ defineAs:"create"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"duplicate","success":1}),tabs,{ defineAs:"duplicate"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"query","success":1}),tabs,{ defineAs:"query"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"highlight","success":1}),tabs,{ defineAs:"highlight"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"update","success":2}),tabs,{ defineAs:"update"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"move","success":2}),tabs,{ defineAs:"move"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"reload","success":2}),tabs,{ defineAs:"reload"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"remove","success":1}),tabs,{ defineAs:"remove"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"detectLanguage","success":1}),tabs,{ defineAs:"detectLanguage"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"captureVisibleTab","success":2}),tabs,{ defineAs:"captureVisibleTab"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"executeScript","success":2}),tabs,{ defineAs:"executeScript"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"insertCSS","success":2}),tabs,{ defineAs:"insertCSS"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"setZoom","success":2}),tabs,{ defineAs:"setZoom"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"getZoom","success":1}),tabs,{ defineAs:"getZoom"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"setZoomSettings","success":2}),tabs,{ defineAs:"setZoomSettings"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tabs","method":"getZoomSettings","success":1}),tabs,{ defineAs:"getZoomSettings"});
var topSites = createObjectIn(chrome, { defineAs: "topSites" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"topSites","method":"get","success":0}),topSites,{ defineAs:"get"});
var tts = createObjectIn(chrome, { defineAs: "tts" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tts","method":"speak","success":2}),tts,{ defineAs:"speak"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tts","method":"stop"}),tts,{ defineAs:"stop"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tts","method":"pause"}),tts,{ defineAs:"pause"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tts","method":"resume"}),tts,{ defineAs:"resume"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tts","method":"isSpeaking","success":0}),tts,{ defineAs:"isSpeaking"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"tts","method":"getVoices","success":0}),tts,{ defineAs:"getVoices"});
var ttsEngine = createObjectIn(chrome, { defineAs: "ttsEngine" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"ttsEngine","method":"sendTtsEvent"}),ttsEngine,{ defineAs:"sendTtsEvent"});
var types = createObjectIn(chrome, { defineAs: "types" });
var wallpaper = createObjectIn(chrome, { defineAs: "wallpaper" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"wallpaper","method":"setWallpaper","success":1}),wallpaper,{ defineAs:"setWallpaper"});
var webNavigation = createObjectIn(chrome, { defineAs: "webNavigation" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"webNavigation","method":"getFrame","success":1}),webNavigation,{ defineAs:"getFrame"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"webNavigation","method":"getAllFrames","success":1}),webNavigation,{ defineAs:"getAllFrames"});
var webRequest = createObjectIn(chrome, { defineAs: "webRequest" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"webRequest","method":"handlerBehaviorChanged","success":0}),webRequest,{ defineAs:"handlerBehaviorChanged"});
var webstore = createObjectIn(chrome, { defineAs: "webstore" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"webstore","method":"install","success":1,"failure":2}),webstore,{ defineAs:"install"});
var windows = createObjectIn(chrome, { defineAs: "windows" });
exportFunction(chromeAPIBridge.bind(null,{"namespace":"windows","method":"get","success":2}),windows,{ defineAs:"get"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"windows","method":"getCurrent","success":1}),windows,{ defineAs:"getCurrent"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"windows","method":"getLastFocused","success":1}),windows,{ defineAs:"getLastFocused"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"windows","method":"getAll","success":1}),windows,{ defineAs:"getAll"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"windows","method":"create","success":1}),windows,{ defineAs:"create"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"windows","method":"update","success":2}),windows,{ defineAs:"update"});
exportFunction(chromeAPIBridge.bind(null,{"namespace":"windows","method":"remove","success":1}),windows,{ defineAs:"remove"});
function chromeAPIBridge(config) {
  var id = INC_ID++;
  var args = Array.prototype.slice.call(arguments);
  var successCallback = config.success ? args[config.success] : null;
  // Not really supporting failureCallback at the moment, as only one API uses it.
  var failureCallback = config.failure ? args[config.failure] : null;

  // Pop off the configuration;
  args.shift();

  self.port.on("chrome-api:response", handler);
  self.port.emit("chrome-api:request", {
    method: config.method,
    args: args,
    id: id,
    namespace: config.namespace,
    success: config.success,
    failure: config.failure
  });

  function handler (data) {
    if (data.id !== id) {
      return;
    }
    self.port.removeListener("chrome-api:response", handler);
    if (typeof successCallback === "function") {
      if (data.res != null) {
        callback.apply(null, cleanse(res));
      } else {
        callback();
      }
    }
  }
}
function cleanse(obj) {
  return unsafeWindow.JSON.parse(JSON.stringify(obj));
}
